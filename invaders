TITLE SPACE-INVADERS
.MODEL SMALL
.STACK 100H
.DATA
ALIEN1  DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
		DB 0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
		DB 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
		DB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
		DB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
		DB 1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,1,1
		DB 1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,1,1
		DB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1    ;cabeçudo
		DB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
		DB 0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,0
		DB 0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,0
		DB 0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,0,0,0
		DB 0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,0,0,0
		DB 0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0
		DB 0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		
ALIEN2  DB 0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
		DB 0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
		DB 0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
		DB 0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
        DB 0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0
        DB 0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0
        DB 0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
        DB 0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
        DB 0,0,0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,1,1,1,1,0,0,0
        DB 0,0,0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,1,1,1,1,0,0,0        ;NERSO
        DB 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
        DB 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
        DB 0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0
        DB 0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0
        DB 0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0			
        DB 0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0
        DB 0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0
        DB 0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,1,0,0,0,0,0,0
        DB 0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0


ALIEN3	DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0    
		DB 0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
		DB 0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
		DB 0,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,0,0								
		DB 0,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,0,0				;cogumelo
		DB 0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
		DB 0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
		DB 0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,1,1,0,0,1,1,1,1,0,0,1,1,0,0,0,0,0,0
		DB 0,0,0,0,0,0,1,1,0,0,1,1,1,1,0,0,1,1,0,0,0,0,0,0
		DB 0,0,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0
		DB 0,0,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0		
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	
ALIENSIZEX DW 24 ; largura
AlIEN1SIZEY DW 19  ; altura
ALIEN1X DW 0 ; posicao no eixo x
ALIEN1Y DW	0 ; posicao no eixo y
ALIEN1Y_INICIO DW	20 ; posicao inicial do eixo y
ALIEN2Y_INICIO DW 45; posicao inicial do eixo y alien2
ALIEN3Y_INICIO DW  70; posicao inicial do eixo y alien3
ALIEN1X_INICIO DW 0,40,80,120, 160 ; posicao inicial de cada alien
CONTADOR_ALIEN DW 5 ; contadador de alien
I_ALIEN DW 0  ; indice de ALIENX1X_INICIO

.CODE
PROC MAIN
MOV AX, @DATA
MOV DS , AX

; modo de tela
MOV AH,0
MOV AL,13H
INT 10H
;;;;;;;;;;;;;;
CONT_ALIEN:
MOV SI, I_ALIEN ; move o indice pra si
MOV BX, ALIEN1X_INICIO[SI] ; pega a posicaox do alien na matriZ
MOV ALIEN1X, BX ; volta a posicao pra alien
XOR BX, BX ; zera bx
ADD I_ALIEN, 2 ; ja prepara o proximo indice
DEC CONTADOR_ALIEN ; subtrai um do contador de bixo 

MOV SI,-1 ; inicia com -1 pra proxima ser 0
MOV ALIEN1Y,-1 ; mesma coisa
START:

	INC ALIEN1X ; incrementa 1 no eixo x
	INC SI ; incrementa um no si
	MOV AX,SI ; move pra ax pra fazer a divisao
	XOR DX, DX ; zera dx
	IDIV ALIENSIZEX ;para ver se a posição do vetor é multipla do tamanho da linha.
	CMP DX,0;compara o resto
	JE PART2 ; se for igual pula pra parte dois
	; a parte doi incremente no eixo y pq quebrou a linha
	IMPRIME:
	CMP SI,460 ; eh final?
	JG CONTADOR_FINAL 
	CMP CONTADOR_ALIEN, 0 ; o contado eh 0?
	JL NEXTALIEN
	;;;;
	CMP ALIEN1[SI], 1 ; na matriz de desenho tem 1?
	JE PRINTAALIENS
	JMP START
	PRINTAALIENS:
	CALL PRINTA1
JMP START
PART2:
INC ALIEN1Y ; inc
PUSH SI ; guarda si
MOV SI, I_ALIEN ; pega o valor do indice da matriz do eixo x
SUB SI, 2 ; como add dois anteriormente, subtrai 2 agora
MOV BX, ALIEN1X_INICIO[SI] ; mesma coisa
MOV ALIEN1X, BX
XOR BX, BX
POP SI ; pega si de volta
JMP IMPRIME 

CONTADOR_FINAL:
JMP CONT_ALIEN
;;;;;;;;;;;;;;;;;;;;;;
NEXTALIEN:
MOV CONTADOR_ALIEN,5;
MOV I_ALIEN,0;
CONT_ALIEN2:
MOV SI, I_ALIEN ; move o indice pra si
MOV BX, ALIEN1X_INICIO[SI] ; pega a posicaox do alien na matriZ
MOV ALIEN1X, BX ; volta a posicao pra alien
XOR BX, BX ; zera bx
ADD I_ALIEN, 2 ; ja prepara o proximo indice
DEC CONTADOR_ALIEN ; subtrai um do contador de bixo 

MOV SI,-1 ; inicia com -1 pra proxima ser 0
MOV ALIEN1Y,-1 ; mesma coisa
START2:

	INC ALIEN1X ; incrementa 1 no eixo x
	INC SI ; incrementa um no si
	MOV AX,SI ; move pra ax pra fazer a divisao
	XOR DX, DX ; zera dx
	IDIV ALIENSIZEX ;para ver se a posição do vetor é multipla do tamanho da linha.
	CMP DX,0;compara o resto
	JE PART2_2 ; se for igual pula pra parte dois
	; a parte doi incremente no eixo y pq quebrou a linha
	IMPRIME2:
	CMP SI,460 ; eh final?
	JG CONTADOR_FINAL2 
	CMP CONTADOR_ALIEN, 0 ; o contado eh 0?
	JL NEXTALIEN2
	;;;;
	CMP ALIEN2[SI], 1 ; na matriz de desenho tem 1?
	JE PRINTAALIENS2
	JMP START2
	PRINTAALIENS2:
	CALL PRINTA2	
JMP START2
PART2_2:
INC ALIEN1Y ; inc
PUSH SI ; guarda si
MOV SI, I_ALIEN ; pega o valor do indice da matriz do eixo x
SUB SI, 2 ; como add dois anteriormente, subtrai 2 agora
MOV BX, ALIEN1X_INICIO[SI] ; mesma coisa
MOV ALIEN1X, BX
XOR BX, BX
POP SI ; pega si de volta
JMP IMPRIME2 

CONTADOR_FINAL2:
JMP CONT_ALIEN2
NEXTALIEN2:
MOV CONTADOR_ALIEN,5;
MOV I_ALIEN,0;
CONT_ALIEN3:
MOV SI, I_ALIEN ; move o indice pra si
MOV BX, ALIEN1X_INICIO[SI] ; pega a posicaox do alien na matriZ
MOV ALIEN1X, BX ; volta a posicao pra alien
XOR BX, BX ; zera bx
ADD I_ALIEN, 2 ; ja prepara o proximo indice
DEC CONTADOR_ALIEN ; subtrai um do contador de bixo 

MOV SI,-1 ; inicia com -1 pra proxima ser 0
MOV ALIEN1Y,-1 ; mesma coisa
START3:

	INC ALIEN1X ; incrementa 1 no eixo x
	INC SI ; incrementa um no si
	MOV AX,SI ; move pra ax pra fazer a divisao
	XOR DX, DX ; zera dx
	IDIV ALIENSIZEX ;para ver se a posição do vetor é multipla do tamanho da linha.
	CMP DX,0;compara o resto
	JE PART2_3 ; se for igual pula pra parte dois
	; a parte doi incremente no eixo y pq quebrou a linha
	IMPRIME3:
	CMP SI,460 ; eh final?
	JG CONTADOR_FINAL3
	CMP CONTADOR_ALIEN, 0 ; o contado eh 0?
	JL FIM_PRINTS
	;;;;
	CMP ALIEN3[SI], 1 ; na matriz de desenho tem 1?
	JE PRINTAALIENS3
	JMP START3
	PRINTAALIENS3:
	CALL PRINTA3	
JMP START3
PART2_3:
INC ALIEN1Y ; inc
PUSH SI ; guarda si
MOV SI, I_ALIEN ; pega o valor do indice da matriz do eixo x
SUB SI, 2 ; como add dois anteriormente, subtrai 2 agora
MOV BX, ALIEN1X_INICIO[SI] ; mesma coisa
MOV ALIEN1X, BX
XOR BX, BX
POP SI ; pega si de volta
JMP IMPRIME3 

CONTADOR_FINAL3:
JMP CONT_ALIEN3
FIM_PRINTS:
MOV AH,1H
INT 21H
MOV AH,4CH
INT 21H
	






ENDP MAIN

PRINTA1 PROC
MOV AH,0cH;comando para printar um pixel
	MOV AL , 1011b;cor
	MOV BH,0;pagina
	MOV CX, ALIEN1X;coordenadas coluna
	MOV DX, ALIEN1Y;coordenadas linha
	ADD DX, ALIEN1Y_INICIO
	INT 10H;interrupção
	RET
PRINTA1 ENDP
PRINTA2 PROC
MOV AH,0cH;comando para printar um pixel
	MOV AL , 0011b;cor
	MOV BH,0;pagina
	MOV CX, ALIEN1X;coordenadas coluna
	MOV DX, ALIEN1Y;coordenadas linha
	ADD DX, ALIEN2Y_INICIO
	INT 10H;interrupção
	RET
PRINTA2 ENDP
PRINTA3 PROC
MOV AH,0cH;comando para printar um pixel
	MOV AL , 1010b;cor
	MOV BH,0;pagina
	MOV CX, ALIEN1X;coordenadas coluna
	MOV DX, ALIEN1Y;coordenadas linha
	ADD DX, ALIEN3Y_INICIO
	INT 10H;interrupção
	RET
PRINTA3 ENDP
END MAIN
